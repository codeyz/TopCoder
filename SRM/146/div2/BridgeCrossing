#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

class BridgeCrossing
{
public:
	int minTime(vector <int> times)
	{
		sort(times.begin(), times.end());
		return minTime(times);
	}

	int minTime(vector<int> times)
	{
		int num = times.size();
		if(num == 0)
			return 0;
		if(num == 1)
			return times[0];
		if(num == 2)
			return times[1];
		if(num == 3)
			return times[0] + times[1] + times[2];
		vector<int> tmp(times.begin(), times.end() - 2);
		int sum = minTime(tmp);
		if(2 * times[1] > times[0] + times[num - 2])
			 sum += 2 * times[0] + times[num - 1] + times[num - 2];
		else
			sum += 2 * times[1] + times[num - 1] + times[0];
		return sum;
	}
};

